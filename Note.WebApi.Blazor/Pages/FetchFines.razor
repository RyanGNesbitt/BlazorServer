@page "/fetchfines"

@using Notes.Core;

@inject INoteServices _db
<h1>Fines</h1>

<p>This component demonstrates fetching and creating fines from a service.</p>

@if (notes == null)
{
    <p><em>Loading...</em></p>
}
else
{
        <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Status</th>
                <th>Reference</th>
                <th>Address</th>
                <th>Fine Amount</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var fine in notes)
            {
                <tr>
                    <td>@fine.PersonName</td>
                    <td>@fine.Status</td>
                    <td>@fine.Reference</td>
                    <td>@fine.Address1</td>
                    <td>@fine.Amount</td>

                    <td><button @onclick="()=>Delete(fine)">Delete</button></td>

                </tr>
            }
        </tbody>
    </table>
            

    <input placeholder="Name" @bind="personName" />
    <input placeholder="Address" @bind="address1" />
    <input placeholder="Fine amount" @bind="amount" />

    <button @onclick="AddNote">Add Fine</button>

}

@code {
    private List<Note> notes;
    private string personName;
    private string address1;
    private int amount;


    protected override async Task OnInitializedAsync()
    {
        notes =  _db.GetNotes();
        await Task.Delay(1000);
    }

    private void AddNote()
    {
        if (!string.IsNullOrWhiteSpace(personName) && !string.IsNullOrWhiteSpace(address1))
        {
            var ticks = new DateTime(2021,9,25).Ticks;
            var ans = DateTime.Now.Ticks - ticks;
            var reference = ans.ToString("x");

            var noteToAdd = new Note {
                Amount = amount, 
                PersonName = personName, 
                Status = "unpaid",
                Address1 = address1,
                Reference = reference
                };

            _db.AddNote(noteToAdd);
            personName = string.Empty;
            address1 = string.Empty;
            amount = 0;

            notes =  _db.GetNotes();

        }
        
    }

    private void  Delete(Note note)
    {
         _db.DeleteNote(note.Id);
        notes = _db.GetNotes();
    }

}



