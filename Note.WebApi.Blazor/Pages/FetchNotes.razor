@page "/fetchnotes"

@using Notes.Core;

@inject INoteServices _db
<h1>Notes</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (notes == null)
{
    <p><em>Loading...</em></p>
}
else
{

            @foreach (var note in notes)
            {
                <div>
                    <div>@note.Title</div>
                    <div>@note.Content</div>
                    

                 <button @onclick="()=>Delete(note)">X</button>

                </div>
            }

    <input placeholder="Title" @bind="newTitle" />
    <input placeholder="Content" @bind="newContent" />
    <button @onclick="AddNote">Add Note</button>

}

@code {
    private List<Note> notes;
    private string newTitle;
    private string newContent;

    protected override async Task OnInitializedAsync()
    {
        notes =  _db.GetNotes();
        await Task.Delay(1000);
    }

    private void AddNote()
    {
        if (!string.IsNullOrWhiteSpace(newTitle) && !string.IsNullOrWhiteSpace(newContent))
        {
            _db.AddNote(new Note { Title = newTitle, Content = newContent });
            newTitle = string.Empty;
            newContent = string.Empty;
            notes =  _db.GetNotes();

        }
        
    }

    private void  Delete(Note note)
    {
         _db.DeleteNote(note.Id);
        notes = _db.GetNotes();
    }

}



